<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.10.8 on win32)" generated="20230414 15:51:05.125" rpa="false" schemaversion="3">
<suite id="s1" name="Trn Database" source="C:\Work\RAM\ATraining\TestRobot\tmp\trn_database.robot">
<test id="s1-t1" name="Connect to Database" line="18">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>pyodbc</arg>
<arg>${DBHost_ConnectionString}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20230414 15:51:05.151" level="INFO">Executing : Connect To Database Using Custom Params : pyodbc.connect(db_api_2.connect(Server='XPGETBIW005C\SQLEXPRESS', Port='1433', Database='TRN', Trusted_Connection='yes', Driver='{SQL Server}')) </msg>
<status status="PASS" starttime="20230414 15:51:05.149" endtime="20230414 15:51:05.200"/>
</kw>
<doc>Connect to Database. No errors from odbc driver are expected.</doc>
<status status="PASS" starttime="20230414 15:51:05.149" endtime="20230414 15:51:05.200"/>
</test>
<test id="s1-t2" name="Table Column Completness Test" line="23">
<kw name="Row Count Is 0" library="DatabaseLibrary">
<var>${output}</var>
<arg>SELECT region_name FROM hr.regions WHERE region_name IS NULL OR LEN(region_name) &lt; 2</arg>
<doc>Check if any rows are returned from the submitted `selectStatement`. If there are, then this will throw an
AssertionError. Set optional input `sansTran` to True to run command without an explicit transaction commit or
rollback.</doc>
<msg timestamp="20230414 15:51:05.202" level="INFO">Executing : Row Count Is 0  |  SELECT region_name FROM hr.regions WHERE region_name IS NULL OR LEN(region_name) &lt; 2 </msg>
<msg timestamp="20230414 15:51:05.202" level="INFO">Executing : Row Count  |  SELECT region_name FROM hr.regions WHERE region_name IS NULL OR LEN(region_name) &lt; 2 </msg>
<msg timestamp="20230414 15:51:05.205" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230414 15:51:05.202" endtime="20230414 15:51:05.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230414 15:51:05.205" level="INFO">None</msg>
<status status="PASS" starttime="20230414 15:51:05.205" endtime="20230414 15:51:05.205"/>
</kw>
<doc>Current DB schema allows NULL and empty values. Check that regions have the notional names.</doc>
<status status="PASS" starttime="20230414 15:51:05.202" endtime="20230414 15:51:05.206"/>
</test>
<test id="s1-t3" name="Email Validation" line="28">
<kw name="Row Count Is 0" library="DatabaseLibrary">
<var>${output}</var>
<arg>SELECT email FROM hr.employees WHERE email IS NOT NULL AND email NOT LIKE '%@%.%'</arg>
<doc>Check if any rows are returned from the submitted `selectStatement`. If there are, then this will throw an
AssertionError. Set optional input `sansTran` to True to run command without an explicit transaction commit or
rollback.</doc>
<msg timestamp="20230414 15:51:05.207" level="INFO">Executing : Row Count Is 0  |  SELECT email FROM hr.employees WHERE email IS NOT NULL AND email NOT LIKE '%@%.%' </msg>
<msg timestamp="20230414 15:51:05.207" level="INFO">Executing : Row Count  |  SELECT email FROM hr.employees WHERE email IS NOT NULL AND email NOT LIKE '%@%.%' </msg>
<msg timestamp="20230414 15:51:05.209" level="FAIL">Expected zero rows to be returned from 'SELECT email FROM hr.employees WHERE email IS NOT NULL AND email NOT LIKE '%@%.%'' but got rows back. Number of rows returned was 2</msg>
<status status="FAIL" starttime="20230414 15:51:05.207" endtime="20230414 15:51:05.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230414 15:51:05.210" endtime="20230414 15:51:05.210"/>
</kw>
<doc>Simple check does the records match email address format.</doc>
<status status="FAIL" starttime="20230414 15:51:05.207" endtime="20230414 15:51:05.210">Expected zero rows to be returned from 'SELECT email FROM hr.employees WHERE email IS NOT NULL AND email NOT LIKE '%@%.%'' but got rows back. Number of rows returned was 2</status>
</test>
<test id="s1-t4" name="Uniqueness Of Values" line="33">
<kw name="Row Count Is 0" library="DatabaseLibrary">
<var>${output}</var>
<arg>SELECT job_title FROM hr.jobs GROUP BY job_title HAVING count(*) &gt; 1</arg>
<doc>Check if any rows are returned from the submitted `selectStatement`. If there are, then this will throw an
AssertionError. Set optional input `sansTran` to True to run command without an explicit transaction commit or
rollback.</doc>
<msg timestamp="20230414 15:51:05.212" level="INFO">Executing : Row Count Is 0  |  SELECT job_title FROM hr.jobs GROUP BY job_title HAVING count(*) &gt; 1 </msg>
<msg timestamp="20230414 15:51:05.212" level="INFO">Executing : Row Count  |  SELECT job_title FROM hr.jobs GROUP BY job_title HAVING count(*) &gt; 1 </msg>
<msg timestamp="20230414 15:51:05.214" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230414 15:51:05.212" endtime="20230414 15:51:05.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230414 15:51:05.214" level="INFO">None</msg>
<status status="PASS" starttime="20230414 15:51:05.214" endtime="20230414 15:51:05.214"/>
</kw>
<doc>Verify uniqueness of job titles.</doc>
<status status="PASS" starttime="20230414 15:51:05.212" endtime="20230414 15:51:05.215"/>
</test>
<kw name="Disconnect From Database" library="DatabaseLibrary" type="TEARDOWN">
<doc>Disconnects from the database.</doc>
<msg timestamp="20230414 15:51:05.216" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20230414 15:51:05.216" endtime="20230414 15:51:05.216"/>
</kw>
<doc>'TRN' Database Testing in Robot Framework</doc>
<status status="FAIL" starttime="20230414 15:51:05.127" endtime="20230414 15:51:05.216"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="1" skip="0" id="s1" name="Trn Database">Trn Database</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
