{"name": "Check that we have no salaries below the specified level.", "status": "failed", "statusDetails": {"message": "AssertionError: The salaries below 3000 are not allowed!\n  There are unexpected values: [(Decimal('2000.00'), ), (Decimal('2500.00'), )]!\nassert 2 == 0\n +  where 2 = len([(Decimal('2000.00'), ), (Decimal('2500.00'), )])", "trace": "self = <tests_trn_db.TestDB object at 0x0000018F738AA050>, min_salary = 3000\n\n    @pytest.mark.test_trn_db\n    @pytest.mark.parametrize(\"min_salary\", [500, 1000, 3000])\n    def test_min_salary(self, min_salary):\n        allure.dynamic.title(\"Check that we have no salaries below the specified level.\")\n        rows = get_db_connection_cursor() \\\n            .execute(f\"\"\"SELECT min_salary\n                         FROM hr.jobs\n                         GROUP BY min_salary\n                         HAVING MIN(min_salary) < {min_salary}\"\"\") \\\n            .fetchall()\n>       assert len(rows) == 0, \\\n            f\"\"\"The salaries below {min_salary} are not allowed!\\nThere are unexpected values: {rows}!\"\"\"\nE       AssertionError: The salaries below 3000 are not allowed!\nE         There are unexpected values: [(Decimal('2000.00'), ), (Decimal('2500.00'), )]!\nE       assert 2 == 0\nE        +  where 2 = len([(Decimal('2000.00'), ), (Decimal('2500.00'), )])\n\ntests_trn_db.py:58: AssertionError"}, "parameters": [{"name": "min_salary", "value": "3000"}], "start": 1681382846115, "stop": 1681382846118, "uuid": "89ee306f-048c-4a80-90e8-aac233f95b3f", "historyId": "838e1820dc930177ab6ae7cc2860ce8c", "testCaseId": "038b3cc2abb14e8c1a295a1cd1a355eb", "fullName": "tests_trn_db.TestDB#test_min_salary", "labels": [{"name": "tag", "value": "test_trn_db"}, {"name": "suite", "value": "tests_trn_db"}, {"name": "subSuite", "value": "TestDB"}, {"name": "host", "value": "XPGETBIW005C"}, {"name": "thread", "value": "9908-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests_trn_db"}]}